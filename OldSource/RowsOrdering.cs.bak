using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;

public class RowsOrdering {
public int order(string[] rows) {

}




// BEGIN CUT HERE
	public void run_test(int Case) { if ((Case == -1) || (Case == 0)) test_case_0(); if ((Case == -1) || (Case == 1)) test_case_1(); if ((Case == -1) || (Case == 2)) test_case_2(); if ((Case == -1) || (Case == 3)) test_case_3(); if ((Case == -1) || (Case == 4)) test_case_4(); }
	private void verify_case(int Case, int Expected, int Received) {
		Console.Write("Test Case #" + Case + "...");
		if (Expected == Received) 
			Console.WriteLine("PASSED"); 
		else { 
			Console.WriteLine("FAILED"); 
			Console.WriteLine("\tExpected: \"" + Expected + '\"');
			Console.WriteLine("\tReceived: \"" + Received + '\"'); } }
	private void test_case_0() { string[] Arg0 = new string[]{"bb", "cb", "ca"}; int Arg1 = 54; verify_case(0, Arg1, order(Arg0)); }
	private void test_case_1() { string[] Arg0 = new string[]{"abcd", "ABCD"}; int Arg1 = 127553; verify_case(1, Arg1, order(Arg0)); }
	private void test_case_2() { string[] Arg0 = new string[]{"Example", "Problem"}; int Arg1 = 943877448; verify_case(2, Arg1, order(Arg0)); }
	private void test_case_3() { string[] Arg0 = new string[]{"a", "b", "c", "d", "e", "f", "g"}; int Arg1 = 28; verify_case(3, Arg1, order(Arg0)); }
	private void test_case_4() { string[] Arg0 = new string[]{"a", "a"}; int Arg1 = 2; verify_case(4, Arg1, order(Arg0)); }

// END CUT HERE
// BEGIN CUT HERE
public static void Main() {
try {
RowsOrdering ___test = new RowsOrdering();
___test.run_test(-1);
} catch(Exception e) {
//Console.WriteLine(e.StackTrace);
Console.WriteLine(e.ToString());
}
}
// END CUT HERE
}
