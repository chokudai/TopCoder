using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;

public class BinaryCards {
public long largestNumber(long A, long B) {

}




// BEGIN CUT HERE
	public void run_test(int Case) { if ((Case == -1) || (Case == 0)) test_case_0(); if ((Case == -1) || (Case == 1)) test_case_1(); if ((Case == -1) || (Case == 2)) test_case_2(); if ((Case == -1) || (Case == 3)) test_case_3(); if ((Case == -1) || (Case == 4)) test_case_4(); if ((Case == -1) || (Case == 5)) test_case_5(); }
	private void verify_case(int Case, long Expected, long Received) {
		Console.Write("Test Case #" + Case + "...");
		if (Expected == Received) 
			Console.WriteLine("PASSED"); 
		else { 
			Console.WriteLine("FAILED"); 
			Console.WriteLine("\tExpected: \"" + Expected + '\"');
			Console.WriteLine("\tReceived: \"" + Received + '\"'); } }
	private void test_case_0() { long Arg0 = 6l; long Arg1 = 6l; long Arg2 = 6l; verify_case(0, Arg2, largestNumber(Arg0, Arg1)); }
	private void test_case_1() { long Arg0 = 6l; long Arg1 = 7l; long Arg2 = 7l; verify_case(1, Arg2, largestNumber(Arg0, Arg1)); }
	private void test_case_2() { long Arg0 = 6l; long Arg1 = 8l; long Arg2 = 15l; verify_case(2, Arg2, largestNumber(Arg0, Arg1)); }
	private void test_case_3() { long Arg0 = 1l; long Arg1 = 11l; long Arg2 = 15l; verify_case(3, Arg2, largestNumber(Arg0, Arg1)); }
	private void test_case_4() { long Arg0 = 35l; long Arg1 = 38l; long Arg2 = 39l; verify_case(4, Arg2, largestNumber(Arg0, Arg1)); }
	private void test_case_5() { long Arg0 = 1125899906842630l; long Arg1 = 1125899906842632l; long Arg2 = 1125899906842639l; verify_case(5, Arg2, largestNumber(Arg0, Arg1)); }

// END CUT HERE
// BEGIN CUT HERE
public static void Main() {
try {
BinaryCards ___test = new BinaryCards();
___test.run_test(-1);
} catch(Exception e) {
//Console.WriteLine(e.StackTrace);
Console.WriteLine(e.ToString());
}
}
// END CUT HERE
}
