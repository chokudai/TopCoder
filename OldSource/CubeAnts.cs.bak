using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;

public class CubeAnts {
    public int getMinimumSteps(int[] pos)
    {
        int res = 0;
        foreach (int a in pos)
        {
            if (a == 6) res = 3;
            else if (a == 2 || a == 5 || a == 7) res = Math.Max(2, res);
            else if (a != 0) res = Math.Max(1, res);
        }
        return res;
    }


// BEGIN CUT HERE
	public void run_test(int Case) { if ((Case == -1) || (Case == 0)) test_case_0(); if ((Case == -1) || (Case == 1)) test_case_1(); if ((Case == -1) || (Case == 2)) test_case_2(); if ((Case == -1) || (Case == 3)) test_case_3(); if ((Case == -1) || (Case == 4)) test_case_4(); }
	private void verify_case(int Case, int Expected, int Received) {
		Console.Write("Test Case #" + Case + "...");
		if (Expected == Received) 
			Console.WriteLine("PASSED"); 
		else { 
			Console.WriteLine("FAILED"); 
			Console.WriteLine("\tExpected: \"" + Expected + '\"');
			Console.WriteLine("\tReceived: \"" + Received + '\"'); } }
	private void test_case_0() { int[] Arg0 = new int[]{0,1,1}; int Arg1 = 1; verify_case(0, Arg1, getMinimumSteps(Arg0)); }
	private void test_case_1() { int[] Arg0 = new int[]{5,4}; int Arg1 = 2; verify_case(1, Arg1, getMinimumSteps(Arg0)); }
	private void test_case_2() { int[] Arg0 = new int[]{0}; int Arg1 = 0; verify_case(2, Arg1, getMinimumSteps(Arg0)); }
	private void test_case_3() { int[] Arg0 = new int[]{6,1,6}; int Arg1 = 3; verify_case(3, Arg1, getMinimumSteps(Arg0)); }
	private void test_case_4() { int[] Arg0 = new int[]{7,7,3,3,7,7,3,3}; int Arg1 = 2; verify_case(4, Arg1, getMinimumSteps(Arg0)); }

// END CUT HERE
// BEGIN CUT HERE
public static void Main() {
try {
CubeAnts ___test = new CubeAnts();
___test.run_test(-1);
} catch(Exception e) {
//Console.WriteLine(e.StackTrace);
Console.WriteLine(e.ToString());
}
}
// END CUT HERE
}
