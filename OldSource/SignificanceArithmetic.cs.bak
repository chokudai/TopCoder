using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;

public class SignificanceArithmetic {
public string evaluate(string expression) {

}




// BEGIN CUT HERE
	public void run_test(int Case) { if ((Case == -1) || (Case == 0)) test_case_0(); if ((Case == -1) || (Case == 1)) test_case_1(); if ((Case == -1) || (Case == 2)) test_case_2(); if ((Case == -1) || (Case == 3)) test_case_3(); if ((Case == -1) || (Case == 4)) test_case_4(); if ((Case == -1) || (Case == 5)) test_case_5(); if ((Case == -1) || (Case == 6)) test_case_6(); if ((Case == -1) || (Case == 7)) test_case_7(); }
	private void verify_case(int Case, string Expected, string Received) {
		Console.Write("Test Case #" + Case + "...");
		if (Expected == Received) 
			Console.WriteLine("PASSED"); 
		else { 
			Console.WriteLine("FAILED"); 
			Console.WriteLine("\tExpected: \"" + Expected + '\"');
			Console.WriteLine("\tReceived: \"" + Received + '\"'); } }
	private void test_case_0() { string Arg0 = "2+2"; string Arg1 = "4"; verify_case(0, Arg1, evaluate(Arg0)); }
	private void test_case_1() { string Arg0 = "1.234+0.000"; string Arg1 = "1.234"; verify_case(1, Arg1, evaluate(Arg0)); }
	private void test_case_2() { string Arg0 = "1.234+0.006"; string Arg1 = "1.240"; verify_case(2, Arg1, evaluate(Arg0)); }
	private void test_case_3() { string Arg0 = "12.57+2.6"; string Arg1 = "15.2"; verify_case(3, Arg1, evaluate(Arg0)); }
	private void test_case_4() { string Arg0 = "5.50005+0"; string Arg1 = "6"; verify_case(4, Arg1, evaluate(Arg0)); }
	private void test_case_5() { string Arg0 = "2.5+2"; string Arg1 = "4"; verify_case(5, Arg1, evaluate(Arg0)); }
	private void test_case_6() { string Arg0 = "0.00+000"; string Arg1 = "0"; verify_case(6, Arg1, evaluate(Arg0)); }
	private void test_case_7() { string Arg0 = "983.17+76.8"; string Arg1 = "1060.0"; verify_case(7, Arg1, evaluate(Arg0)); }

// END CUT HERE
// BEGIN CUT HERE
public static void Main() {
try {
SignificanceArithmetic ___test = new SignificanceArithmetic();
___test.run_test(-1);
} catch(Exception e) {
//Console.WriteLine(e.StackTrace);
Console.WriteLine(e.ToString());
}
}
// END CUT HERE
}
