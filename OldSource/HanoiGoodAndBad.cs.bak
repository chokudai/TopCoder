using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;

public class HanoiGoodAndBad {
public int moves(int N, int Dave) {

}




// BEGIN CUT HERE
	public void run_test(int Case) { if ((Case == -1) || (Case == 0)) test_case_0(); if ((Case == -1) || (Case == 1)) test_case_1(); if ((Case == -1) || (Case == 2)) test_case_2(); }
	private void verify_case(int Case, int Expected, int Received) {
		Console.Write("Test Case #" + Case + "...");
		if (Expected == Received) 
			Console.WriteLine("PASSED"); 
		else { 
			Console.WriteLine("FAILED"); 
			Console.WriteLine("\tExpected: \"" + Expected + '\"');
			Console.WriteLine("\tReceived: \"" + Received + '\"'); } }
	private void test_case_0() { int Arg0 = 3; int Arg1 = 1; int Arg2 = 2; verify_case(0, Arg2, moves(Arg0, Arg1)); }
	private void test_case_1() { int Arg0 = 4; int Arg1 = 15; int Arg2 = 80; verify_case(1, Arg2, moves(Arg0, Arg1)); }
	private void test_case_2() { int Arg0 = 9; int Arg1 = 265; int Arg2 = 16418; verify_case(2, Arg2, moves(Arg0, Arg1)); }

// END CUT HERE
// BEGIN CUT HERE
public static void Main() {
try {
HanoiGoodAndBad ___test = new HanoiGoodAndBad();
___test.run_test(-1);
} catch(Exception e) {
//Console.WriteLine(e.StackTrace);
Console.WriteLine(e.ToString());
}
}
// END CUT HERE
}
