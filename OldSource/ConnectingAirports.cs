using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;

public class ConnectingAirports
{
    public string[] getSchedule(int[] capacityA, int[] capacityU)
    {
        return new string[0];
    }


    // BEGIN CUT HERE
    public void run_test(int Case)
    {
        if ((Case == -1) || (Case == 0)) test_case_0();
        if ((Case == -1) || (Case == 1)) test_case_1();
        if ((Case == -1) || (Case == 2)) test_case_2();
        if ((Case == -1) || (Case == 3)) test_case_3();
        if ((Case == -1) || (Case == 4)) test_case_4();
        if ((Case == -1) || (Case == 5)) test_case_5();
        if ((Case == -1) || (Case == 6)) test_case_6();
        if ((Case == -1) || (Case == 7)) test_case_7();
        if ((Case == -1) || (Case == 8)) test_case_8();
        if ((Case == -1) || (Case == 9)) test_case_9();
    }
    private void verify_case(int Case, string[] Expected, string[] Received)
    {
        Console.Write("Test Case #" + Case + "...");
        if (equal_arrays(Expected, Received))
            Console.WriteLine("PASSED");
        else
        {
            Console.WriteLine("FAILED");
            Console.WriteLine("\tExpected: " + print_array(Expected));
            Console.WriteLine("\tReceived: " + print_array(Received));
        }
    }
    string print_array(string[] V)
    {
        System.Text.StringBuilder builder = new System.Text.StringBuilder();
        builder.Append("{ ");
        foreach (string o in V)
        {
            builder.Append('\"');
            builder.Append(o.ToString());
            builder.Append("\",");
        }
        builder.Append(" }");
        return builder.ToString();
    }
    bool equal_arrays(string[] a, string[] b)
    {
        if (a.Length != b.Length) return false;
        for (int i = 0; i < a.Length; ++i) if (a[i] != b[i]) return false;
        return true;
    }
    private void test_case_0() {
        int[] Arg0 = new int[] { 1, 2, 3 };
        int[] Arg1 = new int[] { 3, 1, 2 };
        string[] Arg2 = new string[] { "100", "101", "111" };
        verify_case(0, Arg2, getSchedule(Arg0, Arg1)); }

    private void test_case_1() {
        int[] Arg0 = new int[] { 3, 2, 1, 1 };
        int[] Arg1 = new int[] { 1, 3, 1, 2 };
        string[] Arg2 = new string[] { "0111", "0101", "0100", "1000" };
        verify_case(1, Arg2, getSchedule(Arg0, Arg1)); }

    private void test_case_2() { 
        int[] Arg0 = new int[] { 1, 2, 3, 4 }; 
        int[] Arg1 = new int[] { 5, 6, 7, 8 };
        string[] Arg2 = new string[] { }; 
        verify_case(2, Arg2, getSchedule(Arg0, Arg1)); }

    private void test_case_3() { 
        int[] Arg0 = new int[] { 47, 47 }; 
        int[] Arg1 = new int[] { 47, 40, 7 };
        string[] Arg2 = new string[] { };
        verify_case(3, Arg2, getSchedule(Arg0, Arg1)); }

    private void test_case_4() { 
        int[] Arg0 = new int[] { 5, 5 }; 
        int[] Arg1 = new int[] { 1, 1, 2, 1, 1, 1, 1, 1, 1 };
        string[] Arg2 = new string[] { "001001111", "111110000" };
        verify_case(4, Arg2, getSchedule(Arg0, Arg1)); }

    private void test_case_5() {
        int[] Arg0 = new int[] { 0, 0, 0, 0 };
        int[] Arg1 = new int[] { 0, 0, 0, 0, 0, 0 };
        string[] Arg2 = new string[] { "000000", "000000", "000000", "000000" }; 
        verify_case(5, Arg2, getSchedule(Arg0, Arg1)); }

    private void test_case_6() {
        int[] Arg0 = new int[] { 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50 };
        int[] Arg1 = new int[] { 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50 };
        string[] Arg2 = new string[] {}; 
        verify_case(6, Arg2, getSchedule(Arg0, Arg1)); }

    private void test_case_7() {
        int[] Arg0 = new int[] { 12, 17, 19, 16, 13, 12, 11, 19, 13, 17, 13, 15, 16, 19, 17, 18, 12, 9, 16, 19, 24, 14, 15, 16, 20, 21, 13, 21, 14, 16, 13, 22, 20, 11, 13, 14 };
        int[] Arg1 = new int[] { 18, 18, 20, 9, 12, 16, 10, 8, 14, 14, 10, 13, 13, 14, 15, 11, 16, 15, 11, 12, 12, 16, 7, 17, 7, 14, 9, 17, 12, 13, 5, 11, 11, 10, 6, 6, 8, 11, 11, 13, 12, 18, 13, 11, 11, 11, 9 };
        string[] Arg2 = new string[] {};
        verify_case(7, Arg2, getSchedule(Arg0, Arg1)); }

    private void test_case_8() {
        int[] Arg0 = new int[] { 5, 38, 26, 26, 25, 10, 27, 2, 16, 25, 13, 33, 24, 19, 35, 34, 13, 40, 39, 37, 20, 39, 22, 3, 36, 39, 7, 11, 13, 1, 34, 21, 27, 38, 36, 34, 22, 25, 23, 11, 32, 5, 3, 4, 0, 3, 3, 1, 0, 0 };
        int[] Arg1 = new int[] { 24, 2, 17, 7, 38, 26, 23, 15, 18, 3, 36, 14, 2, 22, 15, 8, 15, 35, 4, 30, 9, 7, 0, 8, 20, 18, 32, 4, 38, 33, 36, 32, 38, 7, 26, 36, 16, 1, 30, 2, 5, 7, 36, 3, 38, 14, 30, 40, 40, 40 };
        string[] Arg2 = new string[] {}; 
        verify_case(8, Arg2, getSchedule(Arg0, Arg1)); }

    private void test_case_9() {
        int[] Arg0 = new int[] { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 0 };
        int[] Arg1 = new int[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49 };
        string[] Arg2 = new string[] {}; 
        verify_case(9, Arg2, getSchedule(Arg0, Arg1)); }

    // END CUT HERE
    // BEGIN CUT HERE
    public static void Main()
    {
        try
        {
            ConnectingAirports ___test = new ConnectingAirports();
            ___test.run_test(-1);
        }
        catch (Exception e)
        {
            //Console.WriteLine(e.StackTrace);
            Console.WriteLine(e.ToString());
        }
    }
    // END CUT HERE
}
