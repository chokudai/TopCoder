using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;

public class TheCowDivOne {

    long mod = 1000000007;
    public int find(int N, int K)
    {
        if (N % 2 == 0)
        {
            long res = c(N, K);
            res = (res * 2) % mod;
            res = divmod(res, N);
            res = divmod(res, 2);
            return (int)res;
        }
        else
        {
            long res = c(N, K);
            res = divmod(res, N);
            return (int)res;
        }
    }

    long c(long a, long b)
    {
        int i;
        long res = 1;
        for (i = 0; i < b; i++)
        {
            res *= a - i;
            res %= mod;
            res = divmod(res, i + 1);
        }
        return res;
    }

    long divmod(long a, long d)
    {
        return (a * powmod(d, mod - 2)) % mod;
    }

    long powmod(long a, long p)
    {
        if (p == 0) return 1;
        if (p % 2 == 0)
        {
            long r = powmod(a, p / 2);
            return (r * r) % mod;
        }
        else
        {
            long r = powmod(a, p - 1);
            return (a * r) % mod;
        }
    }



// BEGIN CUT HERE
	public void run_test(int Case) { if ((Case == -1) || (Case == 0)) test_case_0(); if ((Case == -1) || (Case == 1)) test_case_1(); if ((Case == -1) || (Case == 2)) test_case_2(); if ((Case == -1) || (Case == 3)) test_case_3(); if ((Case == -1) || (Case == 4)) test_case_4(); }
	private void verify_case(int Case, int Expected, int Received) {
		Console.Write("Test Case #" + Case + "...");
		if (Expected == Received) 
			Console.WriteLine("PASSED"); 
		else { 
			Console.WriteLine("FAILED"); 
			Console.WriteLine("\tExpected: \"" + Expected + '\"');
			Console.WriteLine("\tReceived: \"" + Received + '\"'); } }
	private void test_case_0() { int Arg0 = 7; int Arg1 = 4; int Arg2 = 5; verify_case(0, Arg2, find(Arg0, Arg1)); }
	private void test_case_1() { int Arg0 = 1; int Arg1 = 1; int Arg2 = 1; verify_case(1, Arg2, find(Arg0, Arg1)); }
	private void test_case_2() { int Arg0 = 58; int Arg1 = 4; int Arg2 = 7322; verify_case(2, Arg2, find(Arg0, Arg1)); }
	private void test_case_3() { int Arg0 = 1000; int Arg1 = 47; int Arg2 = 219736903; verify_case(3, Arg2, find(Arg0, Arg1)); }
	private void test_case_4() { int Arg0 = 1000000000; int Arg1 = 1000; int Arg2 = 666683069; verify_case(4, Arg2, find(Arg0, Arg1)); }

// END CUT HERE
// BEGIN CUT HERE
public static void Main() {
try {
TheCowDivOne ___test = new TheCowDivOne();
___test.run_test(-1);
} catch(Exception e) {
//Console.WriteLine(e.StackTrace);
Console.WriteLine(e.ToString());
}
}
// END CUT HERE
}
