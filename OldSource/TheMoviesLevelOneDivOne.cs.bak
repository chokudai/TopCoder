using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;

public class TheMoviesLevelOneDivOne {
public long find(int n, int m, int[] row, int[] seat) {

}




// BEGIN CUT HERE
	public void run_test(int Case) { if ((Case == -1) || (Case == 0)) test_case_0(); if ((Case == -1) || (Case == 1)) test_case_1(); if ((Case == -1) || (Case == 2)) test_case_2(); if ((Case == -1) || (Case == 3)) test_case_3(); }
	private void verify_case(int Case, long Expected, long Received) {
		Console.Write("Test Case #" + Case + "...");
		if (Expected == Received) 
			Console.WriteLine("PASSED"); 
		else { 
			Console.WriteLine("FAILED"); 
			Console.WriteLine("\tExpected: \"" + Expected + '\"');
			Console.WriteLine("\tReceived: \"" + Received + '\"'); } }
	private void test_case_0() { int Arg0 = 2; int Arg1 = 3; int[] Arg2 = new int[]{1, 2}; int[] Arg3 = new int[]{2, 3}; long Arg4 = 1l; verify_case(0, Arg4, find(Arg0, Arg1, Arg2, Arg3)); }
	private void test_case_1() { int Arg0 = 2; int Arg1 = 3; int[] Arg2 = new int[]{1, 1, 1, 2, 2, 2}; int[] Arg3 = new int[]{1, 2, 3, 1, 2, 3}; long Arg4 = 0l; verify_case(1, Arg4, find(Arg0, Arg1, Arg2, Arg3)); }
	private void test_case_2() { int Arg0 = 4; int Arg1 = 7; int[] Arg2 = new int[]{1}; int[] Arg3 = new int[]{1}; long Arg4 = 23l; verify_case(2, Arg4, find(Arg0, Arg1, Arg2, Arg3)); }
	private void test_case_3() { int Arg0 = 10; int Arg1 = 8; int[] Arg2 = new int[]{1, 9, 6, 10, 6, 7, 9, 3, 9, 2}; int[] Arg3 = new int[]{7, 7, 3, 3, 7, 1, 5, 1, 6, 2}; long Arg4 = 54l; verify_case(3, Arg4, find(Arg0, Arg1, Arg2, Arg3)); }

// END CUT HERE
// BEGIN CUT HERE
public static void Main() {
try {
TheMoviesLevelOneDivOne ___test = new TheMoviesLevelOneDivOne();
___test.run_test(-1);
} catch(Exception e) {
//Console.WriteLine(e.StackTrace);
Console.WriteLine(e.ToString());
}
}
// END CUT HERE
}
