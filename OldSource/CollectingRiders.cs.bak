using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;

public class CollectingRiders {
public int minimalMoves(string[] board) {

}




// BEGIN CUT HERE
	public void run_test(int Case) { if ((Case == -1) || (Case == 0)) test_case_0(); if ((Case == -1) || (Case == 1)) test_case_1(); if ((Case == -1) || (Case == 2)) test_case_2(); if ((Case == -1) || (Case == 3)) test_case_3(); if ((Case == -1) || (Case == 4)) test_case_4(); }
	private void verify_case(int Case, int Expected, int Received) {
		Console.Write("Test Case #" + Case + "...");
		if (Expected == Received) 
			Console.WriteLine("PASSED"); 
		else { 
			Console.WriteLine("FAILED"); 
			Console.WriteLine("\tExpected: \"" + Expected + '\"');
			Console.WriteLine("\tReceived: \"" + Received + '\"'); } }
	private void test_case_0() { string[] Arg0 = new string[]{"...1",
 "....",
 "2..."}; int Arg1 = 2; verify_case(0, Arg1, minimalMoves(Arg0)); }
	private void test_case_1() { string[] Arg0 = new string[]{"........",
 ".1......",
 "........",
 "....3...",
 "........",
 "........",
 ".7......",
 "........"}; int Arg1 = 2; verify_case(1, Arg1, minimalMoves(Arg0)); }
	private void test_case_2() { string[] Arg0 = new string[]{"..",
 "2.",
 ".."}; int Arg1 = 0; verify_case(2, Arg1, minimalMoves(Arg0)); }
	private void test_case_3() { string[] Arg0 = new string[]{".1....1."}; int Arg1 = -1; verify_case(3, Arg1, minimalMoves(Arg0)); }
	private void test_case_4() { string[] Arg0 = new string[]{"9133632343",
 "5286698232",
 "8329333369",
 "5425579782",
 "4465864375",
 "8192124686",
 "3191624314",
 "5198496853",
 "1638163997",
 "6457337215"}; int Arg1 = 121; verify_case(4, Arg1, minimalMoves(Arg0)); }

// END CUT HERE
// BEGIN CUT HERE
public static void Main() {
try {
CollectingRiders ___test = new CollectingRiders();
___test.run_test(-1);
} catch(Exception e) {
//Console.WriteLine(e.StackTrace);
Console.WriteLine(e.ToString());
}
}
// END CUT HERE
}
