using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;

public class FindingSquareInTable {
public int findMaximalSquare(string[] table) {

}




// BEGIN CUT HERE
	public void run_test(int Case) { if ((Case == -1) || (Case == 0)) test_case_0(); if ((Case == -1) || (Case == 1)) test_case_1(); if ((Case == -1) || (Case == 2)) test_case_2(); if ((Case == -1) || (Case == 3)) test_case_3(); if ((Case == -1) || (Case == 4)) test_case_4(); if ((Case == -1) || (Case == 5)) test_case_5(); }
	private void verify_case(int Case, int Expected, int Received) {
		Console.Write("Test Case #" + Case + "...");
		if (Expected == Received) 
			Console.WriteLine("PASSED"); 
		else { 
			Console.WriteLine("FAILED"); 
			Console.WriteLine("\tExpected: \"" + Expected + '\"');
			Console.WriteLine("\tReceived: \"" + Received + '\"'); } }
	private void test_case_0() { string[] Arg0 = new string[]{"123",
 "456"}; int Arg1 = 64; verify_case(0, Arg1, findMaximalSquare(Arg0)); }
	private void test_case_1() { string[] Arg0 = new string[]{"00000",
 "00000",
 "00200",
 "00000",
 "00000"}; int Arg1 = 0; verify_case(1, Arg1, findMaximalSquare(Arg0)); }
	private void test_case_2() { string[] Arg0 = new string[]{"3791178",
 "1283252",
 "4103617",
 "8233494",
 "8725572",
 "2937261"}; int Arg1 = 320356; verify_case(2, Arg1, findMaximalSquare(Arg0)); }
	private void test_case_3() { string[] Arg0 = new string[]{"135791357",
 "357913579",
 "579135791",
 "791357913",
 "913579135"}
; int Arg1 = 9; verify_case(3, Arg1, findMaximalSquare(Arg0)); }
	private void test_case_4() { string[] Arg0 = new string[]{"553333733",
 "775337775",
 "777537775",
 "777357333",
 "755553557",
 "355533335",
 "373773573",
 "337373777",
 "775557777"}; int Arg1 = -1; verify_case(4, Arg1, findMaximalSquare(Arg0)); }
	private void test_case_5() { string[] Arg0 = new string[]{"257240281",
 "197510846",
 "014345401",
 "035562575",
 "974935632",
 "865865933",
 "684684987",
 "768934659",
 "287493867"}; int Arg1 = 95481; verify_case(5, Arg1, findMaximalSquare(Arg0)); }

// END CUT HERE
// BEGIN CUT HERE
public static void Main() {
try {
FindingSquareInTable ___test = new FindingSquareInTable();
___test.run_test(-1);
} catch(Exception e) {
//Console.WriteLine(e.StackTrace);
Console.WriteLine(e.ToString());
}
}
// END CUT HERE
}
