using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;

public class SubFibonacci {
public int maxElements(int[] S) {

}




// BEGIN CUT HERE
	public void run_test(int Case) { if ((Case == -1) || (Case == 0)) test_case_0(); if ((Case == -1) || (Case == 1)) test_case_1(); if ((Case == -1) || (Case == 2)) test_case_2(); if ((Case == -1) || (Case == 3)) test_case_3(); if ((Case == -1) || (Case == 4)) test_case_4(); }
	private void verify_case(int Case, int Expected, int Received) {
		Console.Write("Test Case #" + Case + "...");
		if (Expected == Received) 
			Console.WriteLine("PASSED"); 
		else { 
			Console.WriteLine("FAILED"); 
			Console.WriteLine("\tExpected: \"" + Expected + '\"');
			Console.WriteLine("\tReceived: \"" + Received + '\"'); } }
	private void test_case_0() { int[] Arg0 = new int[]{8, 1, 20, 3, 10}; int Arg1 = 5; verify_case(0, Arg1, maxElements(Arg0)); }
	private void test_case_1() { int[] Arg0 = new int[]{19, 47, 50, 58, 77, 99}; int Arg1 = 4; verify_case(1, Arg1, maxElements(Arg0)); }
	private void test_case_2() { int[] Arg0 = new int[]{512}; int Arg1 = 1; verify_case(2, Arg1, maxElements(Arg0)); }
	private void test_case_3() { int[] Arg0 = new int[]{3, 5, 7, 10, 13, 15, 20, 90}; int Arg1 = 7; verify_case(3, Arg1, maxElements(Arg0)); }
	private void test_case_4() { int[] Arg0 = new int[]{1, 2, 3, 5, 8, 13, 21, 34, 55, 89}; int Arg1 = 10; verify_case(4, Arg1, maxElements(Arg0)); }

// END CUT HERE
// BEGIN CUT HERE
public static void Main() {
try {
SubFibonacci ___test = new SubFibonacci();
___test.run_test(-1);
} catch(Exception e) {
//Console.WriteLine(e.StackTrace);
Console.WriteLine(e.ToString());
}
}
// END CUT HERE
}
